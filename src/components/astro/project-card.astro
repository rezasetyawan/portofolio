---
import { Badge } from "@/components/ui/badge";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { cn } from "@/lib/utils";
import Image from "astro/components/Image.astro";
import { marked } from "marked";
import { Icons } from "../icons";
import type { JSX } from "astro/jsx-runtime";

type IconName = keyof typeof Icons;

interface Link {
  icon: IconName
  type: string;
  href: string;
}

interface Props {
  title: string;
  href?: string;
  description: string;
  dates: string;
  tags: readonly string[];
  link?: string;
  image?: string;
  video?: string;
  links?: readonly Link[];
  className?: string;
}

const {
  title,
  href,
  description,
  dates,
  tags,
  link,
  image,
  video,
  links,
  className,
} = Astro.props;
---

<Card
  className="flex flex-col overflow-hidden border hover:shadow-lg transition-all duration-300 ease-out h-full"
>
  <a href={href || "#"} aria-label={title} class={cn("block cursor-pointer", className)}>
    {
      video && (
        <video
          src={video}
          autoplay
          loop
          muted
          playsinline
          class="pointer-events-none mx-auto h-40 w-full object-cover object-top"
        />
      )
    }
    {
      image && (
        <Image
          src={image}
          alt={title}
          width="500"
          height="300"
          class="h-40 w-full overflow-hidden object-cover object-top"
        />
      )
    }
  </a>

  <CardHeader className="px-2">
    <div class="space-y-1">
      <CardTitle className="mt-1 text-base">{title}</CardTitle>
      <time class="font-sans text-xs">{dates}</time>
      {
        link && (
          <div class="hidden font-sans text-xs underline print:visible">
            {link.replace("https://", "").replace("www.", "").replace("/", "")}
          </div>
        )
      }
      <div
        class="prose max-w-full text-pretty font-sans text-xs text-muted-foreground dark:prose-invert"
        set:html={marked(description)}
      />
    </div>
  </CardHeader>

  <CardContent className="mt-auto flex flex-col px-2">
    {
      tags && tags.length > 0 && (
        <div class="mt-2 flex flex-wrap gap-1">
          {tags.map((tag) => {
            return (
              <Badge className="px-1 py-0 text-[10px]" variant="secondary">
                {tag}
              </Badge>
            );
          })}
        </div>
      )
    }
  </CardContent>

  <!-- <CardFooter className="px-2 pb-2">
    {
      links && links.length > 0 && (
        <div class="flex flex-row flex-wrap items-start gap-1">
          {links.map((l, idx) => (
            <a href={l.href} aria-label={l.type} target="_blank">
              <Badge className="flex gap-2 px-2 py-1 text-[10px]">
                {l.icon}
                {l.type}
              </Badge>
            </a>
          ))}
        </div>
      )
    }
  </CardFooter> -->
  <CardFooter className="px-2 pb-2">
    {
      links && links.length > 0 && (
        <div class="flex flex-row flex-wrap items-start gap-1">
          {links?.map((link, idx) => {
            const Icon = Icons[link.icon];
            return (
              <a href={link?.href} aria-label={link.type} target="_blank">
                <Badge key={idx} className="flex gap-2 px-2 py-1 text-[10px]">
                  {/* {link.icon} */}
                  <Icon />
                  {link.type}
                </Badge>
              </a>
            );
          })}
        </div>
      )
    }
  </CardFooter>
</Card>
